- name: Create temporary directory for downloaded packages
  ansible.builtin.tempfile:
    state: directory
  register: down_dir
  check_mode: false

- name: Download pre-built packages
  ansible.builtin.get_url:
    url: "{{ item }}"
    dest: "{{ down_dir.path }}/{{ item | basename }}"
    mode: 0644
  loop: "{{ kernel_urls }}"

- name: Install kAFL kernel
  ansible.builtin.shell: dpkg -i "{{ down_dir.path }}"/*.deb
  become: true
  register: install_kernel
  changed_when: false

- name: Remove temporary download directory
  ansible.builtin.file:
    path: "{{ down_dir.path }}"
    state: absent
  check_mode: false

- name: Configure boot entry to select new kernel
  tags:
    - update_grub
  block:
    - name: Determine Grub menuentry
      ansible.builtin.shell: |
        set -o pipefail
        awk -F\' '/submenu.*Advanced\ / {print $4}' /boot/grub/grub.cfg
        awk -F\' '/menuentry.*{{ kernel_grep_string }}/ {print $4}' /boot/grub/grub.cfg |head -1
      args:
        executable: /bin/bash
      register: grub_menuentry_ids
      when: true
      check_mode: false

    - name: Update /etc/default/grub
      ansible.builtin.lineinfile:
        regexp: ^GRUB_DEFAULT=
        line: GRUB_DEFAULT="{{ grub_menuentry_ids.stdout_lines | join('>') }}"
        dest: /etc/default/grub
        backup: true
      become: true

    - name: Update GRUB
      ansible.builtin.command: update-grub
      become: true
      when: true


- name: Reboot on new kernel
  ansible.builtin.reboot:
  become: true
  when: ansible_connection != 'local'
  tags:
    - reboot_kernel
